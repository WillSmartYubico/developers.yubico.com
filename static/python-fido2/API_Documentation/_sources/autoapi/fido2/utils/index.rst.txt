fido2.utils
===========

.. py:module:: fido2.utils

.. autoapi-nested-parse::

   Various utility functions.

   This module contains various functions used throughout the rest of the project.



Functions
---------

.. autoapisummary::

   fido2.utils.sha256
   fido2.utils.hmac_sha256
   fido2.utils.bytes2int
   fido2.utils.int2bytes
   fido2.utils.websafe_decode
   fido2.utils.websafe_encode


Module Contents
---------------

.. py:function:: sha256(data)

   Produces a SHA256 hash of the input.

   :param data: The input data to hash.
   :return: The resulting hash.


.. py:function:: hmac_sha256(key, data)

   Performs an HMAC-SHA256 operation on the given data, using the given key.

   :param key: The key to use.
   :param data: The input data to hash.
   :return: The resulting hash.


.. py:function:: bytes2int(value)

   Parses an arbitrarily sized integer from a byte string.

   :param value: A byte string encoding a big endian unsigned integer.
   :return: The parsed int.


.. py:function:: int2bytes(value, minlen = -1)

   Encodes an int as a byte string.

   :param value: The integer value to encode.
   :param minlen: An optional minimum length for the resulting byte string.
   :return: The value encoded as a big endian byte string.


.. py:function:: websafe_decode(data)

   Decodes a websafe-base64 encoded string.
   See: "Base 64 Encoding with URL and Filename Safe Alphabet" from Section 5
   in RFC4648 without padding.

   :param data: The input to decode.
   :return: The decoded bytes.


.. py:function:: websafe_encode(data)

   Encodes a byte string into websafe-base64 encoding.

   :param data: The input to encode.
   :return: The encoded string.


