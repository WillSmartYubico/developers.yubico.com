fido2.cbor
==========

.. py:module:: fido2.cbor

.. autoapi-nested-parse::

   Minimal CBOR implementation supporting a subset of functionality and types
   required for FIDO 2 CTAP.

   Use the :func:`encode`, :func:`decode` and :func:`decode_from` functions to encode
   and decode objects to/from CBOR.

   DO NOT use the dump_x/load_x functions directly, these will be made private in
   python-fido2 2.0.



Attributes
----------

.. autoapisummary::

   fido2.cbor.CborType


Functions
---------

.. autoapisummary::

   fido2.cbor.dump_int
   fido2.cbor.dump_bool
   fido2.cbor.dump_list
   fido2.cbor.dump_dict
   fido2.cbor.dump_bytes
   fido2.cbor.dump_text
   fido2.cbor.load_int
   fido2.cbor.load_nint
   fido2.cbor.load_bool
   fido2.cbor.load_bytes
   fido2.cbor.load_text
   fido2.cbor.load_array
   fido2.cbor.load_map
   fido2.cbor.encode
   fido2.cbor.decode_from
   fido2.cbor.decode


Module Contents
---------------

.. py:data:: CborType

.. py:function:: dump_int(data, mt = 0)

.. py:function:: dump_bool(data)

.. py:function:: dump_list(data)

.. py:function:: dump_dict(data)

.. py:function:: dump_bytes(data)

.. py:function:: dump_text(data)

.. py:function:: load_int(ai, data)

.. py:function:: load_nint(ai, data)

.. py:function:: load_bool(ai, data)

.. py:function:: load_bytes(ai, data)

.. py:function:: load_text(ai, data)

.. py:function:: load_array(ai, data)

.. py:function:: load_map(ai, data)

.. py:function:: encode(data)

   Encodes data to a CBOR byte string.


.. py:function:: decode_from(data)

   Decodes a CBOR-encoded value from the start of a byte string.

   Additional data after a valid CBOR object is returned as well.

   :return: The decoded object, and any remaining data.


.. py:function:: decode(data)

   Decodes data from a CBOR-encoded byte string.

   Also validates that no extra data follows the encoded object.


